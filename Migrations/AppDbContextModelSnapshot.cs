// <auto-generated />
using System;
using ApiQuadrinhos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiQuadrinhos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiQuadrinhos.Models.AutorModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cpf")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.CapituloModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<Guid>("QuadrinhoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("QuadrinhoId");

                    b.ToTable("Capitulos");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.LikeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuadrinhoId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("QuadrinhoId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.Pagina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CapituloId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CapituloId");

                    b.ToTable("Pagina");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.QuadrinhoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AutorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Capa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Quadrinhos");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("dtNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.AutorModel", b =>
                {
                    b.HasOne("ApiQuadrinhos.Models.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.CapituloModel", b =>
                {
                    b.HasOne("ApiQuadrinhos.Models.QuadrinhoModel", "Quadrinho")
                        .WithMany("Capitulos")
                        .HasForeignKey("QuadrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quadrinho");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.LikeModel", b =>
                {
                    b.HasOne("ApiQuadrinhos.Models.QuadrinhoModel", "Quadrinho")
                        .WithMany("Likes")
                        .HasForeignKey("QuadrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiQuadrinhos.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quadrinho");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.Pagina", b =>
                {
                    b.HasOne("ApiQuadrinhos.Models.CapituloModel", "Capitulo")
                        .WithMany("Paginas")
                        .HasForeignKey("CapituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capitulo");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.QuadrinhoModel", b =>
                {
                    b.HasOne("ApiQuadrinhos.Models.AutorModel", "AutorModel")
                        .WithMany("Quadrinhos")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AutorModel");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.AutorModel", b =>
                {
                    b.Navigation("Quadrinhos");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.CapituloModel", b =>
                {
                    b.Navigation("Paginas");
                });

            modelBuilder.Entity("ApiQuadrinhos.Models.QuadrinhoModel", b =>
                {
                    b.Navigation("Capitulos");

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
